// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0--rc1
// source: api/msgpusher-manager/v1/msgpusher-manager.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendAccountEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Config      string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	SendChannel string `protobuf:"bytes,4,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
}

func (x *SendAccountEditRequest) Reset() {
	*x = SendAccountEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountEditRequest) ProtoMessage() {}

func (x *SendAccountEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountEditRequest.ProtoReflect.Descriptor instead.
func (*SendAccountEditRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{0}
}

func (x *SendAccountEditRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SendAccountEditRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendAccountEditRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *SendAccountEditRequest) GetSendChannel() string {
	if x != nil {
		return x.SendChannel
	}
	return ""
}

type SendAccountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	SendChannel string `protobuf:"bytes,2,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	Page        int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize    int64  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SendAccountListRequest) Reset() {
	*x = SendAccountListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountListRequest) ProtoMessage() {}

func (x *SendAccountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountListRequest.ProtoReflect.Descriptor instead.
func (*SendAccountListRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{1}
}

func (x *SendAccountListRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendAccountListRequest) GetSendChannel() string {
	if x != nil {
		return x.SendChannel
	}
	return ""
}

func (x *SendAccountListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SendAccountListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SendAccountChangeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status uint64 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SendAccountChangeStatusRequest) Reset() {
	*x = SendAccountChangeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountChangeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountChangeStatusRequest) ProtoMessage() {}

func (x *SendAccountChangeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountChangeStatusRequest.ProtoReflect.Descriptor instead.
func (*SendAccountChangeStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{2}
}

func (x *SendAccountChangeStatusRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SendAccountChangeStatusRequest) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SendAccountRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Config      string `protobuf:"bytes,3,opt,name=Config,proto3" json:"Config,omitempty"`
	SendChannel string `protobuf:"bytes,4,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	Status      int64  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SendAccountRow) Reset() {
	*x = SendAccountRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountRow) ProtoMessage() {}

func (x *SendAccountRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountRow.ProtoReflect.Descriptor instead.
func (*SendAccountRow) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{3}
}

func (x *SendAccountRow) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SendAccountRow) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendAccountRow) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *SendAccountRow) GetSendChannel() string {
	if x != nil {
		return x.SendChannel
	}
	return ""
}

func (x *SendAccountRow) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SendAccountListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*SendAccountRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SendAccountListResp) Reset() {
	*x = SendAccountListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountListResp) ProtoMessage() {}

func (x *SendAccountListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountListResp.ProtoReflect.Descriptor instead.
func (*SendAccountListResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{4}
}

func (x *SendAccountListResp) GetRows() []*SendAccountRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *SendAccountListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SendAccountQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*SendAccountRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *SendAccountQueryResp) Reset() {
	*x = SendAccountQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAccountQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAccountQueryResp) ProtoMessage() {}

func (x *SendAccountQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAccountQueryResp.ProtoReflect.Descriptor instead.
func (*SendAccountQueryResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{5}
}

func (x *SendAccountQueryResp) GetRows() []*SendAccountRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TemplateEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	IdType              int64  `protobuf:"varint,3,opt,name=IdType,proto3" json:"IdType,omitempty"`
	SendChannel         int64  `protobuf:"varint,4,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	TemplateType        int64  `protobuf:"varint,5,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	MsgType             int64  `protobuf:"varint,6,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	ShieldType          int64  `protobuf:"varint,7,opt,name=ShieldType,proto3" json:"ShieldType,omitempty"`
	MsgContent          string `protobuf:"bytes,8,opt,name=MsgContent,proto3" json:"MsgContent,omitempty"`
	SendAccount         int64  `protobuf:"varint,9,opt,name=SendAccount,proto3" json:"SendAccount,omitempty"`
	TemplateSn          string `protobuf:"bytes,10,opt,name=TemplateSn,proto3" json:"TemplateSn,omitempty"`
	SmsChannel          string `protobuf:"bytes,11,opt,name=SmsChannel,proto3" json:"SmsChannel,omitempty"`
	DeduplicationConfig string `protobuf:"bytes,12,opt,name=DeduplicationConfig,proto3" json:"DeduplicationConfig,omitempty"`
}

func (x *TemplateEditRequest) Reset() {
	*x = TemplateEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateEditRequest) ProtoMessage() {}

func (x *TemplateEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateEditRequest.ProtoReflect.Descriptor instead.
func (*TemplateEditRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{6}
}

func (x *TemplateEditRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TemplateEditRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateEditRequest) GetIdType() int64 {
	if x != nil {
		return x.IdType
	}
	return 0
}

func (x *TemplateEditRequest) GetSendChannel() int64 {
	if x != nil {
		return x.SendChannel
	}
	return 0
}

func (x *TemplateEditRequest) GetTemplateType() int64 {
	if x != nil {
		return x.TemplateType
	}
	return 0
}

func (x *TemplateEditRequest) GetMsgType() int64 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *TemplateEditRequest) GetShieldType() int64 {
	if x != nil {
		return x.ShieldType
	}
	return 0
}

func (x *TemplateEditRequest) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *TemplateEditRequest) GetSendAccount() int64 {
	if x != nil {
		return x.SendAccount
	}
	return 0
}

func (x *TemplateEditRequest) GetTemplateSn() string {
	if x != nil {
		return x.TemplateSn
	}
	return ""
}

func (x *TemplateEditRequest) GetSmsChannel() string {
	if x != nil {
		return x.SmsChannel
	}
	return ""
}

func (x *TemplateEditRequest) GetDeduplicationConfig() string {
	if x != nil {
		return x.DeduplicationConfig
	}
	return ""
}

type TemplateChangeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status uint64 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *TemplateChangeStatusRequest) Reset() {
	*x = TemplateChangeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateChangeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateChangeStatusRequest) ProtoMessage() {}

func (x *TemplateChangeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateChangeStatusRequest.ProtoReflect.Descriptor instead.
func (*TemplateChangeStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateChangeStatusRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TemplateChangeStatusRequest) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type TemplateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	SendChannel string `protobuf:"bytes,2,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	Page        int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize    int64  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *TemplateListRequest) Reset() {
	*x = TemplateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateListRequest) ProtoMessage() {}

func (x *TemplateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateListRequest.ProtoReflect.Descriptor instead.
func (*TemplateListRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{8}
}

func (x *TemplateListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateListRequest) GetSendChannel() string {
	if x != nil {
		return x.SendChannel
	}
	return ""
}

func (x *TemplateListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TemplateListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TemplateListRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	IdType          int64  `protobuf:"varint,3,opt,name=IdType,proto3" json:"IdType,omitempty"`
	SendChannel     int64  `protobuf:"varint,4,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	TemplateType    int64  `protobuf:"varint,5,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	MsgType         int64  `protobuf:"varint,6,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	ShieldType      int64  `protobuf:"varint,7,opt,name=ShieldType,proto3" json:"ShieldType,omitempty"`
	MsgContent      string `protobuf:"bytes,8,opt,name=MsgContent,proto3" json:"MsgContent,omitempty"`
	SendAccount     int64  `protobuf:"varint,9,opt,name=SendAccount,proto3" json:"SendAccount,omitempty"`
	SendAccountName string `protobuf:"bytes,10,opt,name=SendAccountName,proto3" json:"SendAccountName,omitempty"`
	TemplateSn      string `protobuf:"bytes,11,opt,name=TemplateSn,proto3" json:"TemplateSn,omitempty"`
	SmsChannel      string `protobuf:"bytes,12,opt,name=SmsChannel,proto3" json:"SmsChannel,omitempty"`
	CreateAt        string `protobuf:"bytes,13,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *TemplateListRow) Reset() {
	*x = TemplateListRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateListRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateListRow) ProtoMessage() {}

func (x *TemplateListRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateListRow.ProtoReflect.Descriptor instead.
func (*TemplateListRow) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{9}
}

func (x *TemplateListRow) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TemplateListRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateListRow) GetIdType() int64 {
	if x != nil {
		return x.IdType
	}
	return 0
}

func (x *TemplateListRow) GetSendChannel() int64 {
	if x != nil {
		return x.SendChannel
	}
	return 0
}

func (x *TemplateListRow) GetTemplateType() int64 {
	if x != nil {
		return x.TemplateType
	}
	return 0
}

func (x *TemplateListRow) GetMsgType() int64 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *TemplateListRow) GetShieldType() int64 {
	if x != nil {
		return x.ShieldType
	}
	return 0
}

func (x *TemplateListRow) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *TemplateListRow) GetSendAccount() int64 {
	if x != nil {
		return x.SendAccount
	}
	return 0
}

func (x *TemplateListRow) GetSendAccountName() string {
	if x != nil {
		return x.SendAccountName
	}
	return ""
}

func (x *TemplateListRow) GetTemplateSn() string {
	if x != nil {
		return x.TemplateSn
	}
	return ""
}

func (x *TemplateListRow) GetSmsChannel() string {
	if x != nil {
		return x.SmsChannel
	}
	return ""
}

func (x *TemplateListRow) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type TemplateListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*TemplateListRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *TemplateListResp) Reset() {
	*x = TemplateListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateListResp) ProtoMessage() {}

func (x *TemplateListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateListResp.ProtoReflect.Descriptor instead.
func (*TemplateListResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{10}
}

func (x *TemplateListResp) GetRows() []*TemplateListRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *TemplateListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TemplateRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TemplateRemoveRequest) Reset() {
	*x = TemplateRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRemoveRequest) ProtoMessage() {}

func (x *TemplateRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRemoveRequest.ProtoReflect.Descriptor instead.
func (*TemplateRemoveRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{11}
}

func (x *TemplateRemoveRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Channel string `protobuf:"bytes,3,opt,name=Channel,proto3" json:"Channel,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{12}
}

func (x *Channel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type GetAllChannelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*Channel `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *GetAllChannelResp) Reset() {
	*x = GetAllChannelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChannelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChannelResp) ProtoMessage() {}

func (x *GetAllChannelResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChannelResp.ProtoReflect.Descriptor instead.
func (*GetAllChannelResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllChannelResp) GetRows() []*Channel {
	if x != nil {
		return x.Rows
	}
	return nil
}

type SmsRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId  string `protobuf:"bytes,1,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
	RequestId   string `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	SendChannel string `protobuf:"bytes,3,opt,name=SendChannel,proto3" json:"SendChannel,omitempty"`
	Page        int64  `protobuf:"varint,4,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize    int64  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SmsRecordRequest) Reset() {
	*x = SmsRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsRecordRequest) ProtoMessage() {}

func (x *SmsRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsRecordRequest.ProtoReflect.Descriptor instead.
func (*SmsRecordRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{14}
}

func (x *SmsRecordRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SmsRecordRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SmsRecordRequest) GetSendChannel() string {
	if x != nil {
		return x.SendChannel
	}
	return ""
}

func (x *SmsRecordRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SmsRecordRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SmsRecordRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SeriesId          string `protobuf:"bytes,2,opt,name=SeriesId,proto3" json:"SeriesId,omitempty"`
	MsgContent        string `protobuf:"bytes,3,opt,name=MsgContent,proto3" json:"MsgContent,omitempty"`
	SupplierName      string `protobuf:"bytes,4,opt,name=SupplierName,proto3" json:"SupplierName,omitempty"`
	SupplierId        int64  `protobuf:"varint,5,opt,name=SupplierId,proto3" json:"SupplierId,omitempty"`
	Phone             string `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	MessageTemplateId int64  `protobuf:"varint,7,opt,name=MessageTemplateId,proto3" json:"MessageTemplateId,omitempty"`
	CreatedAt         string `protobuf:"bytes,8,opt,name=Created_at,json=CreatedAt,proto3" json:"Created_at,omitempty"`
	SendDate          string `protobuf:"bytes,9,opt,name=SendDate,proto3" json:"SendDate,omitempty"`
	Status            string `protobuf:"bytes,10,opt,name=Status,proto3" json:"Status,omitempty"`
	ReportContent     string `protobuf:"bytes,11,opt,name=ReportContent,proto3" json:"ReportContent,omitempty"`
	ChargingNum       int64  `protobuf:"varint,12,opt,name=ChargingNum,proto3" json:"ChargingNum,omitempty"`
	UpdatedAt         string `protobuf:"bytes,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *SmsRecordRow) Reset() {
	*x = SmsRecordRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsRecordRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsRecordRow) ProtoMessage() {}

func (x *SmsRecordRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsRecordRow.ProtoReflect.Descriptor instead.
func (*SmsRecordRow) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{15}
}

func (x *SmsRecordRow) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SmsRecordRow) GetSeriesId() string {
	if x != nil {
		return x.SeriesId
	}
	return ""
}

func (x *SmsRecordRow) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *SmsRecordRow) GetSupplierName() string {
	if x != nil {
		return x.SupplierName
	}
	return ""
}

func (x *SmsRecordRow) GetSupplierId() int64 {
	if x != nil {
		return x.SupplierId
	}
	return 0
}

func (x *SmsRecordRow) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SmsRecordRow) GetMessageTemplateId() int64 {
	if x != nil {
		return x.MessageTemplateId
	}
	return 0
}

func (x *SmsRecordRow) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SmsRecordRow) GetSendDate() string {
	if x != nil {
		return x.SendDate
	}
	return ""
}

func (x *SmsRecordRow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SmsRecordRow) GetReportContent() string {
	if x != nil {
		return x.ReportContent
	}
	return ""
}

func (x *SmsRecordRow) GetChargingNum() int64 {
	if x != nil {
		return x.ChargingNum
	}
	return 0
}

func (x *SmsRecordRow) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SmsRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*SmsRecordRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SmsRecordResp) Reset() {
	*x = SmsRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsRecordResp) ProtoMessage() {}

func (x *SmsRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsRecordResp.ProtoReflect.Descriptor instead.
func (*SmsRecordResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{16}
}

func (x *SmsRecordResp) GetRows() []*SmsRecordRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *SmsRecordResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MsgRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
	RequestId  string `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Channel    string `protobuf:"bytes,3,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Page       int64  `protobuf:"varint,4,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize   int64  `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *MsgRecordRequest) Reset() {
	*x = MsgRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecordRequest) ProtoMessage() {}

func (x *MsgRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRecordRequest.ProtoReflect.Descriptor instead.
func (*MsgRecordRequest) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{17}
}

func (x *MsgRecordRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *MsgRecordRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MsgRecordRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MsgRecordRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MsgRecordRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MsgRecordRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTemplateId int64  `protobuf:"varint,1,opt,name=MessageTemplateId,proto3" json:"MessageTemplateId,omitempty"`
	RequestId         string `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Receiver          string `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	MsgId             string `protobuf:"bytes,4,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	Channel           string `protobuf:"bytes,5,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Msg               string `protobuf:"bytes,6,opt,name=Msg,proto3" json:"Msg,omitempty"`
	SendAt            string `protobuf:"bytes,7,opt,name=SendAt,proto3" json:"SendAt,omitempty"`
	CreateAt          string `protobuf:"bytes,8,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	SendSinceTime     string `protobuf:"bytes,9,opt,name=SendSinceTime,proto3" json:"SendSinceTime,omitempty"`
	ID                int64  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *MsgRecordRow) Reset() {
	*x = MsgRecordRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecordRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecordRow) ProtoMessage() {}

func (x *MsgRecordRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRecordRow.ProtoReflect.Descriptor instead.
func (*MsgRecordRow) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{18}
}

func (x *MsgRecordRow) GetMessageTemplateId() int64 {
	if x != nil {
		return x.MessageTemplateId
	}
	return 0
}

func (x *MsgRecordRow) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MsgRecordRow) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *MsgRecordRow) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *MsgRecordRow) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MsgRecordRow) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MsgRecordRow) GetSendAt() string {
	if x != nil {
		return x.SendAt
	}
	return ""
}

func (x *MsgRecordRow) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *MsgRecordRow) GetSendSinceTime() string {
	if x != nil {
		return x.SendSinceTime
	}
	return ""
}

func (x *MsgRecordRow) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type MsgRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*MsgRecordRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MsgRecordResp) Reset() {
	*x = MsgRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecordResp) ProtoMessage() {}

func (x *MsgRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRecordResp.ProtoReflect.Descriptor instead.
func (*MsgRecordResp) Descriptor() ([]byte, []int) {
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP(), []int{19}
}

func (x *MsgRecordResp) GetRows() []*MsgRecordRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *MsgRecordResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_msgpusher_manager_v1_msgpusher_manager_proto protoreflect.FileDescriptor

var file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDesc = []byte{
	0x0a, 0x30, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x70, 0x75,
	0x73, 0x68, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x22, 0x80, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88, 0x01,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67,
	0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x13, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x73, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6d, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x45, 0x0a, 0x1b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x7b, 0x0a, 0x13, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x95, 0x03, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x64, 0x0a, 0x10, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x27, 0x0a,
	0x15, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9b, 0x03,
	0x0a, 0x0c, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x0d, 0x53,
	0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x0c, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5e, 0x0a,
	0x0d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x6f,
	0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xba, 0x08,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x64, 0x69, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x68, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73,
	0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6e, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73,
	0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75,
	0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x14, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x63, 0x0a, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x56, 0x0a, 0x0e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73,
	0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x6d,
	0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75,
	0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x40, 0x0a, 0x15, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x50, 0x01, 0x5a, 0x25, 0x61, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x2d, 0x76, 0x32,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x67, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescOnce sync.Once
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescData = file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDesc
)

func file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescGZIP() []byte {
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescOnce.Do(func() {
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescData)
	})
	return file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDescData
}

var file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_msgpusher_manager_v1_msgpusher_manager_proto_goTypes = []interface{}{
	(*SendAccountEditRequest)(nil),         // 0: api.msgpusher.manager.SendAccountEditRequest
	(*SendAccountListRequest)(nil),         // 1: api.msgpusher.manager.SendAccountListRequest
	(*SendAccountChangeStatusRequest)(nil), // 2: api.msgpusher.manager.SendAccountChangeStatusRequest
	(*SendAccountRow)(nil),                 // 3: api.msgpusher.manager.SendAccountRow
	(*SendAccountListResp)(nil),            // 4: api.msgpusher.manager.SendAccountListResp
	(*SendAccountQueryResp)(nil),           // 5: api.msgpusher.manager.SendAccountQueryResp
	(*TemplateEditRequest)(nil),            // 6: api.msgpusher.manager.TemplateEditRequest
	(*TemplateChangeStatusRequest)(nil),    // 7: api.msgpusher.manager.TemplateChangeStatusRequest
	(*TemplateListRequest)(nil),            // 8: api.msgpusher.manager.TemplateListRequest
	(*TemplateListRow)(nil),                // 9: api.msgpusher.manager.TemplateListRow
	(*TemplateListResp)(nil),               // 10: api.msgpusher.manager.TemplateListResp
	(*TemplateRemoveRequest)(nil),          // 11: api.msgpusher.manager.TemplateRemoveRequest
	(*Channel)(nil),                        // 12: api.msgpusher.manager.Channel
	(*GetAllChannelResp)(nil),              // 13: api.msgpusher.manager.GetAllChannelResp
	(*SmsRecordRequest)(nil),               // 14: api.msgpusher.manager.SmsRecordRequest
	(*SmsRecordRow)(nil),                   // 15: api.msgpusher.manager.SmsRecordRow
	(*SmsRecordResp)(nil),                  // 16: api.msgpusher.manager.SmsRecordResp
	(*MsgRecordRequest)(nil),               // 17: api.msgpusher.manager.MsgRecordRequest
	(*MsgRecordRow)(nil),                   // 18: api.msgpusher.manager.MsgRecordRow
	(*MsgRecordResp)(nil),                  // 19: api.msgpusher.manager.MsgRecordResp
	(*emptypb.Empty)(nil),                  // 20: google.protobuf.Empty
}
var file_api_msgpusher_manager_v1_msgpusher_manager_proto_depIdxs = []int32{
	3,  // 0: api.msgpusher.manager.SendAccountListResp.rows:type_name -> api.msgpusher.manager.SendAccountRow
	3,  // 1: api.msgpusher.manager.SendAccountQueryResp.rows:type_name -> api.msgpusher.manager.SendAccountRow
	9,  // 2: api.msgpusher.manager.TemplateListResp.rows:type_name -> api.msgpusher.manager.TemplateListRow
	12, // 3: api.msgpusher.manager.GetAllChannelResp.rows:type_name -> api.msgpusher.manager.Channel
	15, // 4: api.msgpusher.manager.SmsRecordResp.rows:type_name -> api.msgpusher.manager.SmsRecordRow
	18, // 5: api.msgpusher.manager.MsgRecordResp.rows:type_name -> api.msgpusher.manager.MsgRecordRow
	0,  // 6: api.msgpusher.manager.MsgPusherManager.SendAccountEdit:input_type -> api.msgpusher.manager.SendAccountEditRequest
	2,  // 7: api.msgpusher.manager.MsgPusherManager.SendAccountChangeStatus:input_type -> api.msgpusher.manager.SendAccountChangeStatusRequest
	1,  // 8: api.msgpusher.manager.MsgPusherManager.SendAccountList:input_type -> api.msgpusher.manager.SendAccountListRequest
	1,  // 9: api.msgpusher.manager.MsgPusherManager.SendAccountQuery:input_type -> api.msgpusher.manager.SendAccountListRequest
	6,  // 10: api.msgpusher.manager.MsgPusherManager.TemplateEdit:input_type -> api.msgpusher.manager.TemplateEditRequest
	7,  // 11: api.msgpusher.manager.MsgPusherManager.TemplateChangeStatus:input_type -> api.msgpusher.manager.TemplateChangeStatusRequest
	8,  // 12: api.msgpusher.manager.MsgPusherManager.TemplateList:input_type -> api.msgpusher.manager.TemplateListRequest
	11, // 13: api.msgpusher.manager.MsgPusherManager.TemplateRemove:input_type -> api.msgpusher.manager.TemplateRemoveRequest
	20, // 14: api.msgpusher.manager.MsgPusherManager.GetAllChannel:input_type -> google.protobuf.Empty
	14, // 15: api.msgpusher.manager.MsgPusherManager.GetSmsRecord:input_type -> api.msgpusher.manager.SmsRecordRequest
	17, // 16: api.msgpusher.manager.MsgPusherManager.GetMsgRecord:input_type -> api.msgpusher.manager.MsgRecordRequest
	20, // 17: api.msgpusher.manager.MsgPusherManager.SendAccountEdit:output_type -> google.protobuf.Empty
	20, // 18: api.msgpusher.manager.MsgPusherManager.SendAccountChangeStatus:output_type -> google.protobuf.Empty
	4,  // 19: api.msgpusher.manager.MsgPusherManager.SendAccountList:output_type -> api.msgpusher.manager.SendAccountListResp
	5,  // 20: api.msgpusher.manager.MsgPusherManager.SendAccountQuery:output_type -> api.msgpusher.manager.SendAccountQueryResp
	20, // 21: api.msgpusher.manager.MsgPusherManager.TemplateEdit:output_type -> google.protobuf.Empty
	20, // 22: api.msgpusher.manager.MsgPusherManager.TemplateChangeStatus:output_type -> google.protobuf.Empty
	10, // 23: api.msgpusher.manager.MsgPusherManager.TemplateList:output_type -> api.msgpusher.manager.TemplateListResp
	20, // 24: api.msgpusher.manager.MsgPusherManager.TemplateRemove:output_type -> google.protobuf.Empty
	13, // 25: api.msgpusher.manager.MsgPusherManager.GetAllChannel:output_type -> api.msgpusher.manager.GetAllChannelResp
	16, // 26: api.msgpusher.manager.MsgPusherManager.GetSmsRecord:output_type -> api.msgpusher.manager.SmsRecordResp
	19, // 27: api.msgpusher.manager.MsgPusherManager.GetMsgRecord:output_type -> api.msgpusher.manager.MsgRecordResp
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_msgpusher_manager_v1_msgpusher_manager_proto_init() }
func file_api_msgpusher_manager_v1_msgpusher_manager_proto_init() {
	if File_api_msgpusher_manager_v1_msgpusher_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountChangeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAccountQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateChangeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateListRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllChannelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsRecordRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecordRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_msgpusher_manager_v1_msgpusher_manager_proto_goTypes,
		DependencyIndexes: file_api_msgpusher_manager_v1_msgpusher_manager_proto_depIdxs,
		MessageInfos:      file_api_msgpusher_manager_v1_msgpusher_manager_proto_msgTypes,
	}.Build()
	File_api_msgpusher_manager_v1_msgpusher_manager_proto = out.File
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_rawDesc = nil
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_goTypes = nil
	file_api_msgpusher_manager_v1_msgpusher_manager_proto_depIdxs = nil
}
